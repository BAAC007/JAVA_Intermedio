#Una excepción es un problema que ocurre durante la ejecución del programa. Las excepciones causan la terminación anormal del programa.

Manejo de excepciones es un poderoso mecanismo que maneja los errores en tiempo de ejecución para mantener el flujo normal de la aplicación.

Una excepción puede ocurrir por muchas razones diferentes. Algunos ejemplos:

- Un usuario ha ingresado datos no válidos.

- Un archivo que necesita ser abierto no se puede encontrar.

- Se ha perdido una conexión de red en medio de las comunicaciones.

- Memoria insuficiente y otros problemas relacionados con los recursos físicos.

#
Las excepciones pueden ser atrapadas usando una combinación de las palabras clave try y catch .

Un bloque try/catch se coloca alrededor del código que podría generar una excepción.

Sintaxis:

try {
  //some code
} catch (Exception e) {
  //some code to handle errors
}

#Una declaración <b>catch </b> implica declarar el tipo de excepción que estás intentando atrapar. Si ocurre una excepción en el bloque <b>try </b>, se verifica el bloque catch que sigue al try. Si el tipo de excepción que ocurrió está listado en un bloque catch , la excepción se pasa al bloque catch de la misma manera que un argumento se pasa a un parámetro de método.

El tipo Exception se puede usar para atrapar todas las posibles excepciones.

El ejemplo a continuación demuestra el manejo de excepciones al intentar acceder a un índice de matriz que no existe:

public class MyClass{
	public static void main(String [] args){
		try{
			int a[] = new int[2];
			System.out.println(a[5]);
		} catch (Exception e){
			System.out.println("An Error");
		}
	}
}

#Sin el bloque try/catch este código debería hacer que el programa se caiga, ya que a[5] no existe.


		